version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: taskmaster
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - taskmaster-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d taskmaster"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - taskmaster-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: taskmaster
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_SSL_MODE: disable
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      REDIS_DB: 0
      APP_ENV: development
      APP_PORT: 8080
      JWT_SECRET: your-super-secret-jwt-key-for-development
      JWT_EXPIRES_IN: 24h
      LOG_LEVEL: info
      LOG_FORMAT: json
      CORS_ALLOWED_ORIGINS: "http://localhost:3000,http://localhost:8080"
      RATE_LIMIT_REQUESTS: 100
      RATE_LIMIT_WINDOW: 1m
      ENABLE_METRICS: "true"
      METRICS_PORT: 9090
    ports:
      - "8080:8080"
      - "9090:9090"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - taskmaster-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  taskmaster-network:
    driver: bridge
